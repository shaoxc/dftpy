stages:
  - test
  - tag

test:
  stage: test
  image: registry.gitlab.com/pavanello-research-group/dftpy:latest
  script:
   - python setup.py install
   - cd examples
   - DFTPY_DATA_PATH='./DATA/' pytest --cov-report term-missing --cov=./ ./test/
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+\%)/'

tag:
  stage: tag
  only:
   - ci
   variables:
    - $CI_COMMIT_MESSAGE =~ /release.*/
  before_script:
   - git config --global user.name "${GITLAB_USER_NAME}"
   - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
   - git status
   - version=$(grep -n 'version' src/dftpy/__init__.py | head -n 1 | awk '{print $3}' | tr -d \")
   - tag='x'$version
   - echo $tag
   - >
     if [ $(git tag -l "$TAG") ]; then
       echo "Tag $TAG already exists"
     else
       git tag -a $TAG -m "Version $TAG"
       git push ci $TAG
     fi

.BuildAndTest:
  image: python:3
  before_script:
   - pip install setuptools
   - pip install ase pymatgen
   - pip install pytest pytest-cov
  script:
   - python setup.py install
   - pip install -r requirements.txt
   - cd examples
   - DFTPY_DATA_PATH='./DATA/' pytest --cov-report term-missing --cov=./ ./test/
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+\%)/'

.BuildAndTestLibXC:
  image: python:3
  before_script:
    - git clone https://gitlab.com/libxc/libxc.git
    - home=$( pwd )
    - cd libxc
    - python setup.py install
    - cd ..
    - apt-get update -qq && apt-get install -y -qq gcc gfortran automake cmake
    - pip install setuptools
    - pip install ase pymatgen
    - pip install pytest pytest-cov
  script:
    - python setup.py install
    - pip install -r requirements.txt
    - cd examples
    - DFTPY_DATA_PATH='./DATA/' pytest --cov-report term-missing --cov=./ ./test/
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+\%)/'

